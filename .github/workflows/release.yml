name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: waspswithbazookas-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: waspswithbazookas-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: waspswithbazookas-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: waspswithbazookas-windows-x86_64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Build
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.target }}
          
          mkdir -p dist
          cp target/${{ matrix.target }}/release/hive dist/hive
          cp target/${{ matrix.target }}/release/wasp dist/wasp
          cp target/${{ matrix.target }}/release/test-dummy dist/test-dummy
          tar -czf ${{ matrix.asset_name }}.tar.gz -C dist .
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            waspswithbazookas-linux-x86_64/waspswithbazookas-linux-x86_64.tar.gz
            waspswithbazookas-macos-x86_64/waspswithbazookas-macos-x86_64.tar.gz
            waspswithbazookas-macos-aarch64/waspswithbazookas-macos-aarch64.tar.gz
            waspswithbazookas-windows-x86_64/waspswithbazookas-windows-x86_64.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Update Homebrew formula in separate repo
  # homebrew:
  #   needs: release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
      
  #     - name: Check for Homebrew token
  #       id: check_token
  #       run: |
  #         if [ -n "${{ secrets.HOMEBREW_TAP_TOKEN }}" ]; then
  #           echo "token_exists=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "token_exists=false" >> $GITHUB_OUTPUT
  #         fi
      
  #     - name: Calculate SHA256 for source tarball
  #       id: sha256
  #       if: steps.check_token.outputs.token_exists == 'true'
  #       run: |
  #         VERSION=${GITHUB_REF#refs/tags/}
  #         curl -L -o source.tar.gz "https://github.com/Phara0h/WaspsWithBazookas/archive/refs/tags/${VERSION}.tar.gz"
  #         SHA256_SOURCE=$(sha256sum source.tar.gz | cut -d' ' -f1)
  #         echo "sha256_source=$SHA256_SOURCE" >> $GITHUB_OUTPUT
      
  #     - name: Update Homebrew Formula
  #       if: steps.check_token.outputs.token_exists == 'true'
  #       uses: mislav/bump-homebrew-formula-action@v3
  #       with:
  #         formula-name: waspswithbazookas
  #         homebrew-tap: Homebrew/homebrew-core
  #         download-url: https://github.com/Phara0h/WaspsWithBazookas/archive/refs/tags/${{ github.ref_name }}.tar.gz
  #         commit-message: |
  #           waspswithbazookas ${{ github.ref_name }}
  #       env:
  #         COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
      
  #     - name: Skip Homebrew update
  #       if: steps.check_token.outputs.token_exists == 'false'
  #       run: |
  #         echo "HOMEBREW_TAP_TOKEN not found, skipping Homebrew formula update"
  #         echo "To enable Homebrew updates, add HOMEBREW_TAP_TOKEN to your repository secrets" 